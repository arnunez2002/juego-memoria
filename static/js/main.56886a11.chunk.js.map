{"version":3,"sources":["components/MemoBlock/MemoBlock.js","components/Board/Board.js","App.js","reportWebVitals.js","index.js"],"names":["MemoBlock","animating","handleMemoClick","memoBlock","className","onClick","flipped","src","emoji","Board","memoBlocks","map","i","emojiList","App","useState","shuffledMemoBlocks","setShuffledMemoBlocks","selectedMemoBlock","setselectedMemoBlock","setAnimating","useEffect","shuffledEmojiList","shuffleArray","index","a","length","j","Math","floor","random","flippedMemoBlock","shuffledMemoBlocksCopy","splice","setTimeout","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAceA,EAZG,SAAC,GAAD,IAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,gBAAiBC,EAA9B,EAA8BA,UAA9B,OACd,qBAAKC,UAAU,aAAaC,QAAS,kBAAQF,EAAUG,UAAYL,GAAcC,EAAgBC,IAAjG,SACI,sBAAKC,UAAS,2BAAsBD,EAAUG,SAAW,sBAAzD,UACI,qBAAKF,UAAU,qBAEf,qBAAKA,UAAU,kBAAf,SACI,qBAAKG,IAAKJ,EAAUK,gBCKrBC,G,MAVD,SAAC,GAA8C,IAA7CR,EAA4C,EAA5CA,UAAWC,EAAiC,EAAjCA,gBAAiBQ,EAAgB,EAAhBA,WACxC,OACI,sBAAMN,UAAU,QAAhB,SACKM,EAAWC,KAAK,SAACR,EAAWS,GACzB,OAAO,cAAC,EAAD,CAA2CX,UAAWA,EAAWC,gBAAiBA,EAAiBC,UAAWA,GAA9G,UAAmBS,EAAnB,YAAwBT,EAAUK,eC4BnDK,EAhCY,CAChB,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,kGACA,uIACA,uIACA,uIACA,uIACA,uIACA,sIACA,uIACA,uIACA,uIACA,uIACA,uIACA,uIACA,uIACA,wIAiDaC,EA5CH,WAAO,IAAD,EACoCC,mBAAS,IAD7C,mBACTC,EADS,KACWC,EADX,OAEkCF,mBAAS,MAF3C,mBAETG,EAFS,KAEUC,EAFV,OAGkBJ,oBAAS,GAH3B,mBAGTd,EAHS,KAGEmB,EAHF,KAKhBC,qBAAW,WACT,IAAMC,EAAoBC,EAAa,GAAD,OAAKV,EAAcA,IACzDI,EAAsBK,EAAkBX,KAAK,SAACH,EAAOI,GAAR,MAAe,CAAEY,MAAOZ,EAAGJ,QAAOF,SAAS,SACvF,IAEH,IAAMiB,EAAe,SAAAE,GACnB,IAAK,IAAIb,EAAIa,EAAEC,OAAS,EAAGd,EAAI,EAAGA,IAAK,CACnC,IAAMe,EAAIC,KAAKC,MAAMD,KAAKE,UAAYlB,EAAI,IADP,EAEpB,CAACa,EAAEE,GAAIF,EAAEb,IAAvBa,EAAEb,GAFgC,KAE5Ba,EAAEE,GAF0B,KAIvC,OAAOF,GAwBT,OACE,cAAC,EAAD,CAAOf,WAAYM,EAAoBf,UAAWA,EAAYC,gBAtBxC,SAAAC,GACtB,IAAM4B,EAAgB,2BAAQ5B,GAAR,IAAmBG,SAAS,IAC9C0B,EAAsB,YAAOhB,GACjCgB,EAAuBC,OAAO9B,EAAUqB,MAAO,EAAGO,GAClDd,EAAsBe,GACG,OAAtBd,EACDC,EAAqBhB,GACbe,EAAkBV,QAAUL,EAAUK,MAC9CW,EAAqB,OAErBC,GAAa,GACbc,YAAW,WACTF,EAAuBC,OAAO9B,EAAUqB,MAAO,EAAGrB,GAClD6B,EAAuBC,OAAOf,EAAkBM,MAAO,EAAGN,GAC1DD,EAAsBe,GACtBb,EAAqB,MACrBC,GAAa,KACZ,UC5DMe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.56886a11.chunk.js","sourcesContent":["import './MemoBlock.css';\n\nconst MemoBlock = ({animating, handleMemoClick, memoBlock}) => (\n    <div className=\"memo-block\" onClick={() => (!memoBlock.flipped && !animating) && handleMemoClick(memoBlock)}>\n        <div className={`memo-block-inner ${memoBlock.flipped && 'memo-block-flipped'}`}>\n            <div className=\"memo-block-front\">\n            </div>\n            <div className=\"memo-block-back\">\n                <img src={memoBlock.emoji}></img>\n            </div>\n        </div>\n    </div>\n)\n\nexport default MemoBlock;","import MemoBlock from '../MemoBlock/MemoBlock';\nimport './Board.css';\n\nconst Board = ({animating, handleMemoClick, memoBlocks}) => {\n    return (\n        <main className=\"board\">\n            {memoBlocks.map( (memoBlock, i) => {\n                return <MemoBlock key={`${i}_${memoBlock.emoji}`} animating={animating} handleMemoClick={handleMemoClick} memoBlock={memoBlock} />\n            })}\n        </main>\n    );\n}\n\nexport default Board;","import './App.css';\nimport { useEffect, useState } from 'react';\nimport Board from './components/Board/Board';\nconst imageList = [\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709598678/programa/nxowso3ieva0vhelxbtl.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709598678/programa/uuagq9d5p4bkagj1xex0.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709598678/programa/tktyaeur3ro1zd9dwob4.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709598678/programa/uf6zdmhr96690bhsyn0b.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709598678/programa/budak3nwlj96rbjnwzuj.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709597135/programa/pb006hvwq5z2e2ra0v4v.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709597135/programa/glhoda6vx8kqwu9377u9.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709597134/programa/hykc0u3lhvgbjkz1siuq.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709597134/programa/boqy4pszz8ssvgddmnuk.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709597133/programa/ow1gmnkzn8nuvpzwvopi.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709597133/programa/fgi12vlgn2g6kmeuijwf.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709597133/programa/v7gzzid5yajz9sx5okod.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709597133/programa/ekktmiyqtbbzrogsp4de.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709597132/programa/ivjfpdosglxedwlycgbt.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1709597132/programa/xi9wg5ojnopulmhz8z3y.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082830/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/m44v7a8aq7hfe7llc0xy.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082830/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/f73lut2ocxniov18tchk.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082829/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/w3w6kvzmgzyyeul3u4uh.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082829/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/dvd9mlgki6wlcosxc69g.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082829/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/zlwh4nntnub51nr8jsya.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710081710/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets/me4yeosdg9xpotommpja.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082828/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/yzq1l3qcnuuxnxuecnhl.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082827/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/zewshggmeehfpssvevdk.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082827/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/hypcgbi3ja6nsbzkd4th.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082826/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/on6zkjaqywhwvolzkgo1.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082826/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/vhj9qet5et0mlz4mxa4p.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082825/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/n349fv8cty8llz5q4pnu.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082825/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/ngrwpvwggbeoipdjfz86.png',\n  'https://res.cloudinary.com/djb4ehtlx/image/upload/v1710082825/RECORTE%20CON%20SOMBRAS%20%C3%91-Zpsd-assets1/tts5dzptp7hvvld5yb81.png',\n];\n\nconst emojiList =imageList;\n\nconst App = () => {\n  const [shuffledMemoBlocks, setShuffledMemoBlocks] = useState([]);\n  const [selectedMemoBlock, setselectedMemoBlock] = useState(null);\n  const [animating, setAnimating] = useState(false);\n\n  useEffect( () => {\n    const shuffledEmojiList = shuffleArray([...emojiList, ...emojiList]);\n    setShuffledMemoBlocks(shuffledEmojiList.map( (emoji, i) => ({ index: i, emoji, flipped: false}) ));\n  }, []);\n\n  const shuffleArray = a => {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n  }\n\n  const handleMemoClick = memoBlock => {\n    const flippedMemoBlock = { ...memoBlock, flipped: true };\n    let shuffledMemoBlocksCopy = [...shuffledMemoBlocks];\n    shuffledMemoBlocksCopy.splice(memoBlock.index, 1, flippedMemoBlock);\n    setShuffledMemoBlocks(shuffledMemoBlocksCopy);\n    if(selectedMemoBlock === null) {\n      setselectedMemoBlock(memoBlock);\n    } else if(selectedMemoBlock.emoji === memoBlock.emoji) {\n      setselectedMemoBlock(null);\n    } else {\n      setAnimating(true);\n      setTimeout(() => {\n        shuffledMemoBlocksCopy.splice(memoBlock.index, 1, memoBlock);\n        shuffledMemoBlocksCopy.splice(selectedMemoBlock.index, 1, selectedMemoBlock);\n        setShuffledMemoBlocks(shuffledMemoBlocksCopy);\n        setselectedMemoBlock(null);\n        setAnimating(false);\n      }, 1000);\n    }\n  }\n\n  return (\n    <Board memoBlocks={shuffledMemoBlocks} animating={animating}  handleMemoClick={handleMemoClick} />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}